[{"/Users/junius/git/quickbooks/src/index.js":"1","/Users/junius/git/quickbooks/src/App.js":"2","/Users/junius/git/quickbooks/src/reportWebVitals.js":"3","/Users/junius/git/quickbooks/src/Nav.js":"4","/Users/junius/git/quickbooks/src/Start.js":"5","/Users/junius/git/quickbooks/src/NewProject.js":"6","/Users/junius/git/quickbooks/src/redux/reducers.js":"7","/Users/junius/git/quickbooks/src/redux/actions.js":"8","/Users/junius/git/quickbooks/src/redux/store.js":"9","/Users/junius/git/quickbooks/src/Company.js":"10"},{"size":643,"mtime":1608066449521,"results":"11","hashOfConfig":"12"},{"size":405,"mtime":1608073047119,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607986313864,"results":"14","hashOfConfig":"12"},{"size":641,"mtime":1608001362556,"results":"15","hashOfConfig":"12"},{"size":711,"mtime":1608075353616,"results":"16","hashOfConfig":"12"},{"size":2792,"mtime":1608135761580,"results":"17","hashOfConfig":"12"},{"size":370,"mtime":1608074601319,"results":"18","hashOfConfig":"12"},{"size":133,"mtime":1608074772383,"results":"19","hashOfConfig":"12"},{"size":205,"mtime":1608071357869,"results":"20","hashOfConfig":"12"},{"size":2773,"mtime":1608135716208,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1u0riq9",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/junius/git/quickbooks/src/index.js",[],["47","48"],"/Users/junius/git/quickbooks/src/App.js",[],"/Users/junius/git/quickbooks/src/reportWebVitals.js",[],"/Users/junius/git/quickbooks/src/Nav.js",[],"/Users/junius/git/quickbooks/src/Start.js",["49"],"import React, { Component } from 'react';\nimport './Start.css';\n\nimport { connect } from \"react-redux\";\nimport { showAction, hideAction } from \"./redux/actions\";\n\nclass Start extends Component {\n  render() {\n    return (\n      <div className=\"start\">\n        <h1>Run your projects with confidence</h1>\n        <h4>Make better decisions by knowning how your jobs are doing</h4>\n        <button className=\"green\" onClick={(e) => this.props.hideAction(e)}>Start a project</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n});\nconst mapDispatchToProps = dispatch => ({\n  hideAction: () => dispatch(hideAction)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Start);\n","/Users/junius/git/quickbooks/src/NewProject.js",["50","51"],"import React, { Component } from 'react';\nimport './NewProject.css';\n\nimport { connect } from \"react-redux\";\nimport { showAction, hideAction } from \"./redux/actions\";\n\nclass NewProject extends Component {\n\n  state = {\n    showCustomerName: false,\n    showNewCustomer: false,\n    customerName: ''\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  renameProject(name) {\n    this.props.setProjectName(name);\n  }\n\n  setProjectName(e) {\n    var newVal = e.target.value;\n    if (newVal.length > 0) {\n      this.renameProject(newVal);\n    }\n  }\n\n  saveProject(name) {\n    console.log('saveProject');\n    this.props.showAction();\n  }\n\n  save(e) {\n    this.saveProject();\n  }\n\n  setCustomer(e) {\n    var show = false;\n    if (e.target.value.length > 0) {\n      show = true;\n    }\n    this.setState({\n      showCustomerName: show,\n      customerName: e.target.value\n    });\n  }\n\n  newCustomer(e) {\n    this.setState({\n      showCustomerName: false,\n      showNewCustomer: true\n    });\n  }\n\n  hideNewCustomer(e) {\n    this.setState({\n      showCustomerName: false,\n      showNewCustomer: false\n    });\n  }\n  \n  render() {\n    return (\n      <div className={`new-project ${!this.props.dialog ? 'show' : 'hide'}`}>\n        <div className=\"scrim\"></div>\n        <div className=\"side-panel\">\n          <h2>New project</h2>\n          <h4>Project name *</h4>\n          <input onBlur={(e) => this.setProjectName(e)}></input>\n          <h4>Customer *</h4>\n          <input onKeyUp={(e) => this.setCustomer(e)} onBlur={(e) => this.setCustomer(e)} onClick={(e) => this.setCustomer(e)}></input>\n          <div className={`add-customer ${this.state.showCustomerName ? 'show' : ''}`} onClick={(e) => this.newCustomer(e)}>\n            <span className=\"add\">+</span> Add {this.state.customerName}\n          </div>\n          <div className={`new-customer ${this.state.showNewCustomer ? 'show' : ''}`}>\n            <h2>New Customer</h2>\n            <h4>* Name</h4>\n            <input value={this.state.customerName}></input>\n            <div className=\"save-container\">\n              <button className=\"save\" onClick={(e) => this.hideNewCustomer(e)}>Save</button>\n            </div>\n            <div className=\"divider\"></div>\n            <p><a>Got a Gmail account</a></p>\n          </div>\n          <h4>Notes</h4>\n          <textarea></textarea>\n          <button className=\"green\" onClick={(e) => this.save()}>Save</button>\n        </div>        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n});\nconst mapDispatchToProps = dispatch => ({\n  showAction: () => dispatch(showAction),\n  hideAction: () => dispatch(hideAction),\n  setProjectName: (name) => dispatch({\n    type: 'projectName',\n    payload: name\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewProject);\n","/Users/junius/git/quickbooks/src/redux/reducers.js",["52"],"export default (state, action) => {\n  switch (action.type) {\n    case 'dialog':\n      console.log('state dialog');\n      return {\n        dialog: action.payload\n      };\n    case 'projectName':\n      console.log('state projectName');\n      return {\n        projectName: action.payload\n      };\n    default:\n      console.log('state default');\n      return state;\n  }\n};\n","/Users/junius/git/quickbooks/src/redux/actions.js",[],"/Users/junius/git/quickbooks/src/redux/store.js",[],"/Users/junius/git/quickbooks/src/Company.js",["53","54","55","56","57","58","59","60"],"import React, { Component } from 'react';\nimport './Company.css';\n\nimport { connect } from \"react-redux\";\n\nclass Company extends Component {\n\n  state = {\n    projectName: \"David's Orchids\",\n    showProject: false,\n    showScrim: true\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate(prevProps) {\n    this.state.projectName = this.props.projectName;\n    if (this.state.projectName && this.state.projectName.length > 0) {\n      this.state.showProject = true;\n    } else {\n      this.state.showProject = false;\n    }\n  }\n\n  closeOverlay() {\n    this.state.showProject = true;\n    this.setState({\n      showScrim: false,\n      projectName: this.props.projectName\n    });\n  }\n\n  closeOverlayClicked(e) {\n    this.closeOverlay();\n  }\n\n  render() {\n    return (\n      <div className={`company ${this.state.showProject > 0 ? 'show' : 'hide'}`}>\n        <h3><a href=\"#\">All projects</a></h3>\n        <h2>{this.state.projectName != null ? this.state.projectName : \"David's Orchids\"}</h2>\n        <h4><a href=\"#\">David C</a> | <a href=\"#\">In progress</a></h4>\n        <div className=\"card\"></div>\n        <ul className=\"company-nav\">\n          <li className=\"selected\">Overview</li>\n          <li>Transactions</li>\n          <li>Time Activity</li>\n          <li>Project Reports</li>\n        </ul>\n        <div className=\"mini-cards\">\n          <div className=\"mini-card\">\n            <div className=\"amount green\">$0.00</div>\n            <div className=\"type\">Income</div>\n          </div>\n          <div className=\"mini-card\">\n            <div className=\"circle left\">-</div>\n            <div className=\"amount teal\">$0.00</div>\n            <div className=\"type\">Costs</div>\n            <div className=\"circle right\">=</div>\n          </div>\n          <div className=\"mini-card\">\n            <div className=\"amount\">$0.00</div>\n            <div className=\"type\">Profit</div>\n          </div>\n        </div>\n        <div className={`overlay ${this.state.showScrim > 0 ? 'show' : 'hide'}`}>\n          <div className=\"multi-scrim scrim1\"></div>\n          <div className=\"multi-scrim scrim2\"></div>\n          <div className=\"multi-scrim scrim3\"></div>\n          <div className=\"multi-scrim scrim4\"></div>\n          <div className=\"multi-scrim scrim5\"></div>\n          <div className=\"info\">\n            <div className=\"close\" onClick={(e) => this.closeOverlayClicked(e)}>x</div>\n            <h2>Your project at a glance</h2>\n            <p>See your project's performance end-to-end. Track income and all your costs, including labor.</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n});\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":15,"column":3,"nodeType":"71","messageId":"72","endLine":17,"endColumn":4},{"ruleId":"73","severity":1,"message":"74","line":85,"column":16,"nodeType":"75","endLine":85,"endColumn":19},{"ruleId":"76","severity":1,"message":"77","line":1,"column":1,"nodeType":"78","endLine":17,"endColumn":3},{"ruleId":"69","severity":1,"message":"70","line":14,"column":3,"nodeType":"71","messageId":"72","endLine":16,"endColumn":4},{"ruleId":"79","severity":1,"message":"80","line":19,"column":5,"nodeType":"81","endLine":19,"endColumn":15},{"ruleId":"79","severity":1,"message":"80","line":21,"column":7,"nodeType":"81","endLine":21,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":23,"column":7,"nodeType":"81","endLine":23,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":28,"column":5,"nodeType":"81","endLine":28,"endColumn":15},{"ruleId":"73","severity":1,"message":"82","line":42,"column":13,"nodeType":"75","endLine":42,"endColumn":25},{"ruleId":"73","severity":1,"message":"82","line":44,"column":13,"nodeType":"75","endLine":44,"endColumn":25},{"ruleId":"73","severity":1,"message":"82","line":44,"column":39,"nodeType":"75","endLine":44,"endColumn":51},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'showAction' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]